!function (t) { t.visualizePlugins.push(function (i, o) { var l = t.extend({ tooltip: !1, tooltipalign: "auto", tooltipvalign: "top", tooltipclass: "visualize-tooltip", tooltiphtml: function (t) { if (i.multiHover) { for (var o = "", l = 0; l < t.point.length; l++) o += "<p>" + t.point[l].value + " - " + t.point[l].yLabels[0] + "</p>"; return o } return "<p>" + t.point.value + " - " + t.point.yLabels[0] + "</p>" }, delay: !1 }, i); if (l.tooltip) { var e = t(this), s = e.next(), a = s.find(".visualize-scroller"), n = a.width(), r = s.find(".visualize-interaction-tracker"); r.css({ backgroundColor: "white", opacity: 0, zIndex: 100 }); var p = t('<div class="' + l.tooltipclass + '"/>').css({ position: "absolute", display: "none", zIndex: 90 }).insertAfter(a.find("canvas")), c = !0; "undefined" != typeof G_vmlCanvasManager && (a.css({ position: "absolute" }), r.css({ marginTop: "-" + l.height + "px" })), e.bind("vizualizeOver", function (i, o) { if (o.canvasContain.get(0) == s.get(0)) { if (l.multiHover) var e = o.point[0].canvasCords; else var e = o.point.canvasCords; var r, d, u, v = Math.round(e[0] + o.tableData.zeroLocX), f = Math.round(e[1] + o.tableData.zeroLocY); if ("left" == l.tooltipalign || "auto" == l.tooltipalign && v - a.scrollLeft() <= n / 2) { if (c = !t.browser.msie || 7 != t.browser.version && 6 != t.browser.version ? !0 : !1, r = v - (c ? a.scrollLeft() : 0), v - a.scrollLeft() < 0) return; r += "px", d = "", clasAdd = "tooltipleft", u = "tooltipright" } else { if (c = t.browser.msie && 7 == t.browser.version ? !1 : !0, d = Math.abs(v - l.width) - (l.width - (c ? a.scrollLeft() : 0) - n), Math.abs(v - l.width) - (l.width - a.scrollLeft() - n) < 0) return; r = "", d += "px", clasAdd = "tooltipright", u = "tooltipleft" } p.addClass(clasAdd).removeClass(u).html(l.tooltiphtml(o)).css({ display: "block", top: f + "px", left: r, right: d }) } }), e.bind("vizualizeOut", function (t, i) { p.css({ display: "none" }) }) } }) }(jQuery);